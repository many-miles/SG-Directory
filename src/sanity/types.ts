/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Playlist = {
  _id: string;
  _type: "playlist";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  select?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  category?: "accommodation" | "surfing" | "tours" | "food" | "transport" | "home" | "beauty" | "events" | "other";
  location?: Geopoint;
  serviceRadius?: number;
  contactMethod?: "phone" | "whatsapp" | "email" | "person";
  contactDetails?: string;
  priceRange?: "free" | "budget" | "moderate" | "premium" | "luxury" | "quote";
  availability?: Array<"monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday">;
  views?: number;
  description?: string;
  image?: string;
  pitch?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  isActive?: boolean;
  featured?: boolean;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  name?: string;
  username?: string;
  email?: string;
  image?: string;
  bio?: string;
};

export type Markdown = string;

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Playlist | Service | Author | Markdown | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/app/(root)/map/page.tsx
// Variable: SERVICES_WITH_LOCATION_QUERY
// Query: *[_type == "service" && defined(location) && isActive == true] | order(_createdAt desc) {    _id,    title,    category,    location,    priceRange,    author -> {      name    }  }
export type SERVICES_WITH_LOCATION_QUERYResult = Array<{
  _id: string;
  title: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  location: Geopoint | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  author: {
    name: string | null;
  } | null;
}>;

// Source: ./src/sanity/lib/queries.ts
// Variable: SERVICES_QUERY
// Query: *[_type == "service" && defined(slug.current) && isActive == true && (!defined($search) || title match $search || category match $search || author->name match $search) && (!defined($category) || category == $category)] | order(_createdAt desc) {   _id,     title,     slug,    _createdAt,    author -> {      _id, name, username, image, bio    },     views,    description,    category,    image,    location,    serviceRadius,    priceRange,    contactMethod,    contactDetails,    availability,    pitch,    isActive,    featured}
export type SERVICES_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  _createdAt: string;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    image: string | null;
    bio: string | null;
  } | null;
  views: number | null;
  description: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  image: string | null;
  location: Geopoint | null;
  serviceRadius: number | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  contactMethod: "email" | "person" | "phone" | "whatsapp" | null;
  contactDetails: string | null;
  availability: Array<"friday" | "monday" | "saturday" | "sunday" | "thursday" | "tuesday" | "wednesday"> | null;
  pitch: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  isActive: boolean | null;
  featured: boolean | null;
}>;
// Variable: SERVICE_BY_ID_QUERY
// Query: *[_type == "service" && _id == $id][0]{  _id,   title,   slug,  _createdAt,  author -> {    _id, name, username, image, bio  },   views,  description,  category,  image,  location,  serviceRadius,  priceRange,  contactMethod,  contactDetails,  availability,  pitch,  isActive,  featured}
export type SERVICE_BY_ID_QUERYResult = {
  _id: string;
  title: string | null;
  slug: Slug | null;
  _createdAt: string;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    image: string | null;
    bio: string | null;
  } | null;
  views: number | null;
  description: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  image: string | null;
  location: Geopoint | null;
  serviceRadius: number | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  contactMethod: "email" | "person" | "phone" | "whatsapp" | null;
  contactDetails: string | null;
  availability: Array<"friday" | "monday" | "saturday" | "sunday" | "thursday" | "tuesday" | "wednesday"> | null;
  pitch: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  isActive: boolean | null;
  featured: boolean | null;
} | null;
// Variable: SERVICES_BY_CATEGORY_QUERY
// Query: *[_type == "service" && category == $category && isActive == true] | order(_createdAt desc) {  _id,   title,   slug,  _createdAt,  author -> {    _id, name, image, bio  },   views,  description,  category,  image,  location,  serviceRadius,  priceRange,  featured}
export type SERVICES_BY_CATEGORY_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  _createdAt: string;
  author: {
    _id: string;
    name: string | null;
    image: string | null;
    bio: string | null;
  } | null;
  views: number | null;
  description: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  image: string | null;
  location: Geopoint | null;
  serviceRadius: number | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  featured: boolean | null;
}>;
// Variable: FEATURED_SERVICES_QUERY
// Query: *[_type == "service" && featured == true && isActive == true] | order(_createdAt desc)[0...6] {    _id,    title,    slug,    _createdAt,    author -> {      _id, name, username, image, bio    },    views,    description,    category,    image,    location,    serviceRadius,    priceRange,    contactMethod,    contactDetails,    availability,    pitch,    isActive,    featured}
export type FEATURED_SERVICES_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  _createdAt: string;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    image: string | null;
    bio: string | null;
  } | null;
  views: number | null;
  description: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  image: string | null;
  location: Geopoint | null;
  serviceRadius: number | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  contactMethod: "email" | "person" | "phone" | "whatsapp" | null;
  contactDetails: string | null;
  availability: Array<"friday" | "monday" | "saturday" | "sunday" | "thursday" | "tuesday" | "wednesday"> | null;
  pitch: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  isActive: boolean | null;
  featured: boolean | null;
}>;
// Variable: SERVICE_VIEWS_QUERY
// Query: *[_type == "service" && _id == $id][0]{        _id, views    }
export type SERVICE_VIEWS_QUERYResult = {
  _id: string;
  views: number | null;
} | null;
// Variable: AUTHOR_BY_GOOGLE_ID_QUERY
// Query: *[_type == "author" && id == $id][0]{    _id,    id,    name,    username,    email,    image,    bio}
export type AUTHOR_BY_GOOGLE_ID_QUERYResult = {
  _id: string;
  id: string | null;
  name: string | null;
  username: string | null;
  email: string | null;
  image: string | null;
  bio: string | null;
} | null;
// Variable: AUTHOR_BY_ID_QUERY
// Query: *[_type == "author" && _id == $id][0]{    _id,    id,    name,    username,    email,    image,    bio}
export type AUTHOR_BY_ID_QUERYResult = {
  _id: string;
  id: string | null;
  name: string | null;
  username: string | null;
  email: string | null;
  image: string | null;
  bio: string | null;
} | null;
// Variable: SERVICES_BY_AUTHOR_QUERY
// Query: *[_type == "service" && author._ref == $id] | order(_createdAt desc) {  _id,   _type,  _createdAt,  _updatedAt,  _rev,  title,   slug,  author -> {    _id, name, image, bio  },   views,  description,  category,  image,  location,  priceRange,  isActive}
export type SERVICES_BY_AUTHOR_QUERYResult = Array<{
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string | null;
  slug: Slug | null;
  author: {
    _id: string;
    name: string | null;
    image: string | null;
    bio: string | null;
  } | null;
  views: number | null;
  description: string | null;
  category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
  image: string | null;
  location: Geopoint | null;
  priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
  isActive: boolean | null;
}>;
// Variable: PLAYLIST_BY_SLUG_QUERY
// Query: *[_type == "playlist" && slug.current == $slug][0]{  _id,  title,  slug,  select[]->{    _id,    _createdAt,    title,    slug,    author->{      _id,      name,      slug,      image,      bio    },    views,    description,    category,    image,    location,    priceRange,    pitch  }}
export type PLAYLIST_BY_SLUG_QUERYResult = {
  _id: string;
  title: string | null;
  slug: Slug | null;
  select: Array<{
    _id: string;
    _createdAt: string;
    title: string | null;
    slug: Slug | null;
    author: {
      _id: string;
      name: string | null;
      slug: null;
      image: string | null;
      bio: string | null;
    } | null;
    views: number | null;
    description: string | null;
    category: "accommodation" | "beauty" | "events" | "food" | "home" | "other" | "surfing" | "tours" | "transport" | null;
    image: string | null;
    location: Geopoint | null;
    priceRange: "budget" | "free" | "luxury" | "moderate" | "premium" | "quote" | null;
    pitch: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  }> | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type == \"service\" && defined(location) && isActive == true] | order(_createdAt desc) {\n    _id,\n    title,\n    category,\n    location,\n    priceRange,\n    author -> {\n      name\n    }\n  }\n": SERVICES_WITH_LOCATION_QUERYResult;
    "*[_type == \"service\" && defined(slug.current) && isActive == true && (!defined($search) || title match $search || category match $search || author->name match $search) && (!defined($category) || category == $category)] | order(_createdAt desc) {\n   _id, \n    title, \n    slug,\n    _createdAt,\n    author -> {\n      _id, name, username, image, bio\n    }, \n    views,\n    description,\n    category,\n    image,\n    location,\n    serviceRadius,\n    priceRange,\n    contactMethod,\n    contactDetails,\n    availability,\n    pitch,\n    isActive,\n    featured\n}": SERVICES_QUERYResult;
    "*[_type == \"service\" && _id == $id][0]{\n  _id, \n  title, \n  slug,\n  _createdAt,\n  author -> {\n    _id, name, username, image, bio\n  }, \n  views,\n  description,\n  category,\n  image,\n  location,\n  serviceRadius,\n  priceRange,\n  contactMethod,\n  contactDetails,\n  availability,\n  pitch,\n  isActive,\n  featured\n}": SERVICE_BY_ID_QUERYResult;
    "*[_type == \"service\" && category == $category && isActive == true] | order(_createdAt desc) {\n  _id, \n  title, \n  slug,\n  _createdAt,\n  author -> {\n    _id, name, image, bio\n  }, \n  views,\n  description,\n  category,\n  image,\n  location,\n  serviceRadius,\n  priceRange,\n  featured\n}": SERVICES_BY_CATEGORY_QUERYResult;
    "*[_type == \"service\" && featured == true && isActive == true] | order(_createdAt desc)[0...6] {\n    _id,\n    title,\n    slug,\n    _createdAt,\n    author -> {\n      _id, name, username, image, bio\n    },\n    views,\n    description,\n    category,\n    image,\n    location,\n    serviceRadius,\n    priceRange,\n    contactMethod,\n    contactDetails,\n    availability,\n    pitch,\n    isActive,\n    featured\n}": FEATURED_SERVICES_QUERYResult;
    "\n    *[_type == \"service\" && _id == $id][0]{\n        _id, views\n    }\n": SERVICE_VIEWS_QUERYResult;
    "\n*[_type == \"author\" && id == $id][0]{\n    _id,\n    id,\n    name,\n    username,\n    email,\n    image,\n    bio\n}\n": AUTHOR_BY_GOOGLE_ID_QUERYResult;
    "\n*[_type == \"author\" && _id == $id][0]{\n    _id,\n    id,\n    name,\n    username,\n    email,\n    image,\n    bio\n}\n": AUTHOR_BY_ID_QUERYResult;
    "*[_type == \"service\" && author._ref == $id] | order(_createdAt desc) {\n  _id, \n  _type,\n  _createdAt,\n  _updatedAt,\n  _rev,\n  title, \n  slug,\n  author -> {\n    _id, name, image, bio\n  }, \n  views,\n  description,\n  category,\n  image,\n  location,\n  priceRange,\n  isActive\n}": SERVICES_BY_AUTHOR_QUERYResult;
    "*[_type == \"playlist\" && slug.current == $slug][0]{\n  _id,\n  title,\n  slug,\n  select[]->{\n    _id,\n    _createdAt,\n    title,\n    slug,\n    author->{\n      _id,\n      name,\n      slug,\n      image,\n      bio\n    },\n    views,\n    description,\n    category,\n    image,\n    location,\n    priceRange,\n    pitch\n  }\n}": PLAYLIST_BY_SLUG_QUERYResult;
  }
}
